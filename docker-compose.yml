services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: quickbite-postgres
    environment:
      POSTGRES_DB: quickbite
      POSTGRES_USER: quickbite
      POSTGRES_PASSWORD: quickbite123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - quickbite-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quickbite -d quickbite"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: quickbite-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - quickbite-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Backend
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: quickbite-api
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://quickbite:quickbite123@postgres:5432/quickbite
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-that-is-at-least-32-characters-long
      JWT_EXPIRES_IN: 7d
      REFRESH_TOKEN_SECRET: your-super-secret-refresh-token-key-that-is-at-least-32-characters-long
      REFRESH_TOKEN_EXPIRES_IN: 30d
      FRONTEND_URL: http://localhost:5173
      CLOUDINARY_CLOUD_NAME: your-cloudinary-cloud-name
      CLOUDINARY_API_KEY: your-cloudinary-api-key
      CLOUDINARY_API_SECRET: your-cloudinary-api-secret
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/api:/app/apps/api
      - /app/apps/api/node_modules
    networks:
      - quickbite-network
    command: sh -c "npx prisma migrate dev --name init && pnpm dev"

  # Web Frontend (Vendor Dashboard)
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: quickbite-web
    environment:
      VITE_API_URL: http://localhost:5000/api/v1
      VITE_SOCKET_URL: http://localhost:5000
    ports:
      - "5173:5173"
    depends_on:
      - api
    volumes:
      - ./apps/web:/app/apps/web
      - /app/apps/web/node_modules
    networks:
      - quickbite-network
    command: sh -c "pnpm install && pnpm dev -- --host 0.0.0.0 --port 5173"

volumes:
  postgres_data:
  redis_data:

networks:
  quickbite-network:
    driver: bridge