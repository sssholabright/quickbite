services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: quickbite-postgres-prod
    environment:
      POSTGRES_DB: quickbite_prod
      POSTGRES_USER: quickbite
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - quickbite-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quickbite -d quickbite_prod"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: quickbite-redis-prod
    volumes:
      - redis_prod_data:/data
    networks:
      - quickbite-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # API Backend
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: quickbite-api-prod
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://quickbite:${POSTGRES_PASSWORD}@postgres:5432/quickbite_prod
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: 7d
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      REFRESH_TOKEN_EXPIRES_IN: 30d
      FRONTEND_URL: ${FRONTEND_URL}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quickbite-network
    restart: unless-stopped

  # Web Frontend (Vendor Dashboard)
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: quickbite-web-prod
    environment:
      VITE_API_URL: ${API_URL}
      VITE_SOCKET_URL: ${SOCKET_URL}
    ports:
      - "5173:5173"
    depends_on:
      - api
    networks:
      - quickbite-network
    restart: unless-stopped

volumes:
  postgres_prod_data:
  redis_prod_data:

networks:
  quickbite-network:
    driver: bridge
